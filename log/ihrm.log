2019-10-29 10:34:20,223 INFO [root] [__init__.py <module>:6] - [测试日志信息]
2019-10-29 10:48:24,536 INFO [root] [login_test.py test01_login_success:21] - [登陆成功的数据： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': '4c40e69d-d855-4e41-93f2-c1c328b7d121'}]
2019-10-29 10:50:44,523 INFO [root] [login_test.py test01_login_success:21] - [登陆成功的数据： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': 'a720f304-3ed1-461f-a140-f5e634c5d848'}]
2019-10-29 10:58:24,806 INFO [root] [login_test.py test01_login_success:23] - [登陆成功的数据： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': 'e8edb8ad-bf90-4968-92d4-179df5dde0c9'}]
2019-10-29 11:14:19,315 INFO [root] [login_test.py test01_login_success:24] - [登陆成功的数据： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': '098d203a-d9dd-4541-9cec-737a9819adb3'}]
2019-10-29 11:14:19,450 INFO [root] [login_test.py test02_mobile_is_not_exists:40] - [用户名不存在： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}]
2019-10-29 11:14:19,586 INFO [root] [login_test.py test03_password_is_error:48] - [密码错误： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}]
2019-10-29 11:14:19,717 INFO [root] [login_test.py test04_requests_params_is_empyt:56] - [请求参数为空： {'success': False, 'code': 99999, 'message': '抱歉，系统繁忙，请稍后重试！', 'data': None}]
2019-10-29 11:14:19,889 INFO [root] [login_test.py test05_mobile_is_empyt:64] - [用户名为空： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}]
2019-10-29 11:14:20,019 INFO [root] [login_test.py test06_password_is_empty:72] - [密码为空： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}]
2019-10-29 11:14:20,167 INFO [root] [login_test.py test07_add_invalid_params:80] - [添加一个无效的参数： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': '2acddf91-1a60-4bd9-85e5-b904aa3720a0'}]
2019-10-29 12:23:19,016 INFO [root] [login_api.py login_invalid_params:37] - [无效参数的登陆数据 {'mobile': '13800000002', 'password': '123456'}]
2019-10-29 12:23:19,169 INFO [root] [login_test.py test07_add_invalid_params:80] - [添加一个无效的参数： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': 'cdff389d-0c6f-4d3a-b32c-b6d8e5a7cad7'}]
2019-10-29 12:24:13,374 INFO [root] [login_api.py login_invalid_params:33] - [{}]
2019-10-29 12:24:13,374 INFO [root] [login_api.py login_invalid_params:38] - [无效参数的登陆数据 {'mobile': '13800000002', 'password': '123456'}]
2019-10-29 12:24:13,530 INFO [root] [login_test.py test07_add_invalid_params:80] - [添加一个无效的参数： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': 'd35ba706-321d-40fe-b718-50335b0db06e'}]
2019-10-29 12:24:50,455 INFO [root] [login_api.py login_invalid_params:33] - [{'verify': '12345'}]
2019-10-29 12:25:26,394 INFO [root] [login_api.py login_invalid_params:33] - [{'verify': {'k': 'v'}}]
2019-10-29 12:26:25,113 INFO [root] [login_api.py login_invalid_params:39] - [无效参数的登陆数据 {'mobile': '13800000002', 'password': '123456'}]
2019-10-29 12:26:27,521 INFO [root] [login_test.py test07_add_invalid_params:80] - [添加一个无效的参数： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': 'e13101c3-e1de-4912-baf4-4a107e297b5b'}]
2019-10-29 12:26:47,334 INFO [root] [login_api.py login_invalid_params:39] - [无效参数的登陆数据 {'mobile': '13800000002', 'password': '123456'}]
2019-10-29 12:26:47,583 INFO [root] [login_test.py test07_add_invalid_params:80] - [添加一个无效的参数： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': '7d8fade4-0b34-4ee7-a1fb-e8406b02faab'}]
2019-10-29 12:27:27,967 INFO [root] [login_api.py login_invalid_params:33] - [kwargs {}]
2019-10-29 12:27:27,967 INFO [root] [login_api.py login_invalid_params:34] - [args ({'verify': '123456'},)]
2019-10-29 12:27:27,968 INFO [root] [login_api.py login_invalid_params:39] - [无效参数的登陆数据 {'mobile': '13800000002', 'password': '123456'}]
2019-10-29 12:27:28,110 INFO [root] [login_test.py test07_add_invalid_params:80] - [添加一个无效的参数： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': 'd232aa2d-6faa-4641-a59c-a91df324dfca'}]
2019-10-29 12:27:57,622 INFO [root] [login_api.py login_invalid_params:33] - [kwargs {}]
2019-10-29 12:27:57,622 INFO [root] [login_api.py login_invalid_params:34] - [args ({'verify': '123456'},)]
2019-10-29 12:30:07,213 INFO [root] [login_api.py login_invalid_params:33] - [kwargs {}]
2019-10-29 12:30:07,213 INFO [root] [login_api.py login_invalid_params:34] - [args ({'verify': '123456'},)]
2019-10-29 12:31:14,702 INFO [root] [login_api.py login_invalid_params:33] - [kwargs {}]
2019-10-29 12:31:14,702 INFO [root] [login_api.py login_invalid_params:34] - [args {'verify': '123456'}]
2019-10-29 12:31:14,859 INFO [root] [login_test.py test07_add_invalid_params:80] - [添加一个无效的参数： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': 'f0980641-6ce0-4c00-9b85-930826bf1073'}]
2019-10-29 12:31:49,269 INFO [root] [login_api.py login_invalid_params:33] - [kwargs {}]
2019-10-29 12:31:49,269 INFO [root] [login_api.py login_invalid_params:34] - [args {'verify': '123456'}]
2019-10-29 12:32:34,555 INFO [root] [login_api.py login_invalid_params:33] - [kwargs {}]
2019-10-29 12:32:34,555 INFO [root] [login_api.py login_invalid_params:34] - [args {'verify': '123456'}]
2019-10-29 12:34:44,555 INFO [root] [login_api.py login_invalid_params:35] - [无效参数的登陆数据 {'mobile': '13800000002', 'password': '123456'}]
2019-10-29 12:34:44,718 INFO [root] [login_test.py test07_add_invalid_params:80] - [添加一个无效的参数： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': 'ff840c21-2eb5-40c3-98f2-452d3e39fe7b'}]
2019-10-29 12:35:26,349 INFO [root] [login_api.py login_invalid_params:34] - [{'verfify': '123456'}]
2019-10-29 12:35:26,349 INFO [root] [login_api.py login_invalid_params:35] - [无效参数的登陆数据 {'mobile': '13800000002', 'password': '123456'}]
2019-10-29 12:35:27,771 INFO [root] [login_test.py test07_add_invalid_params:80] - [添加一个无效的参数： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': 'a8e59d57-c1c5-447b-9e6d-ef14c7532f49'}]
2019-10-29 12:40:04,901 INFO [root] [login_api.py login_invalid_params:34] - [{'verfify': '123456'}]
2019-10-29 12:42:06,710 INFO [root] [login_api.py login_invalid_params:34] - [{'verfify': '123456'}]
2019-10-29 12:42:42,292 INFO [root] [login_api.py login_invalid_params:34] - [{'verfify': '123456'}]
2019-10-29 12:44:31,604 INFO [root] [login_api.py login_invalid_params:34] - [{'verfify': '123456'}]
2019-10-29 12:44:31,604 INFO [root] [login_api.py login_invalid_params:37] - [无效参数的登陆数据 {'mobile': '13800000002', 'password': '123456', 'verfify': '123456'}]
2019-10-29 12:44:31,767 INFO [root] [login_test.py test07_add_invalid_params:80] - [添加一个无效的参数： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': '70399c94-484d-44d9-8f0a-eadb3ffdc735'}]
2019-10-29 15:08:14,893 INFO [root] [emp_test.py test01_login_success:25] - [员工管理模块登陆接口的调用结果为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': '14d94aec-94c1-4fd3-94a1-ffbcfb8c32ed'}]
2019-10-29 15:25:45,374 INFO [root] [emp_test.py test01_login_success:28] - [员工管理模块登陆接口的调用结果为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': 'e7925362-3210-47e3-a77c-77f007591661'}]
2019-10-29 15:25:51,306 INFO [root] [emp_test.py test01_login_success:28] - [员工管理模块登陆接口的调用结果为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': '5ebf88f9-477c-48b1-adb0-5ff546edb0a2'}]
2019-10-29 15:25:51,384 INFO [root] [emp_test.py test02_add_emp:42] - [{'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1189080889027809280'}}]
2019-10-29 15:36:02,925 INFO [root] [emp_test.py test01_login_success:28] - [员工管理模块登陆接口的调用结果为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': 'f2a900da-affb-4ce0-a117-ece3b717ede9'}]
2019-10-29 15:36:03,004 INFO [root] [emp_test.py test02_add_emp:42] - [{'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1189083454335438848'}}]
2019-10-29 15:38:55,656 INFO [root] [emp_test.py test01_login_success:27] - [员工管理模块登陆接口的调用结果为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': '428bd99f-37d3-412d-91da-d4624b6123df'}]
2019-10-29 15:38:55,656 INFO [root] [emp_test.py test01_login_success:33] - [员工管理模块登陆接口中访问app.Headers的值为： {'Content-Type': 'application/json', 'Authorization': 'Bearer 428bd99f-37d3-412d-91da-d4624b6123df'}]
2019-10-29 15:41:39,749 INFO [root] [emp_test.py test01_login_success:27] - [员工管理模块登陆接口的调用结果为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': 'a037d2df-11e5-4874-8cc0-2b12bfcf9b52'}]
2019-10-29 15:41:39,749 INFO [root] [emp_test.py test01_login_success:33] - [员工管理模块登陆接口中访问app.Headers的值为： {'Content-Type': 'application/json', 'Authorization': 'Bearer a037d2df-11e5-4874-8cc0-2b12bfcf9b52'}]
2019-10-29 15:41:39,764 INFO [root] [emp_api.py add_emp:25] - [添加员宫接口中，请求头为：self.headers = {'Content-Type': 'application/json', 'Authorization': 'Bearer a037d2df-11e5-4874-8cc0-2b12bfcf9b52'}]
2019-10-29 15:41:39,841 INFO [root] [emp_test.py test02_add_emp:42] - [{'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1189084867132215296'}}]
2019-10-29 15:52:20,268 INFO [root] [emp_test.py test01_login_success:27] - [员工管理模块登陆接口的调用结果为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': 'e95ec863-7b6c-49f9-93f9-84a84e159371'}]
2019-10-29 15:52:20,268 INFO [root] [emp_test.py test01_login_success:33] - [员工管理模块登陆接口中访问app.Headers的值为： {'Content-Type': 'application/json', 'Authorization': 'Bearer e95ec863-7b6c-49f9-93f9-84a84e159371'}]
2019-10-29 15:52:20,284 INFO [root] [emp_api.py add_emp:26] - [添加员工接口中，请求头为：self.headers = {'Content-Type': 'application/json', 'Authorization': 'Bearer e95ec863-7b6c-49f9-93f9-84a84e159371'}]
2019-10-29 15:52:20,363 INFO [root] [emp_test.py test02_add_emp:44] - [添加员工接口的返回值为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1189087553667813376'}}]
2019-10-29 15:52:20,365 INFO [root] [emp_api.py query_emp:32] - [查询员工接口的URL为　http://182.92.81.159/api/sys/user/1189087553667813376]
2019-10-29 15:52:20,439 INFO [root] [emp_test.py test03_query_emp:56] - [查询员工接口返回的数据为：{'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1189087553667813376', 'mobile': '13700452327', 'username': '女娲006', 'password': '239224cb3a725784780582cf615c31b3', 'enableState': 1, 'createTime': None, 'companyId': '1', 'companyName': '传智播客', 'departmentId': '1066238836272664576', 'timeOfEntry': '2019-10-01T00:00:00.000+0000', 'formOfEmployment': 1, 'workNumber': '9833221', 'formOfManagement': None, 'workingCity': None, 'correctionTime': '2019-12-31T16:00:00.000+0000', 'inServiceStatus': None, 'departmentName': '财务部', 'roleIds': [], 'staffPhoto': None}}]
2019-10-29 15:56:14,065 INFO [root] [emp_test.py test01_login_success:27] - [员工管理模块登陆接口的调用结果为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': 'f7fcdf20-20b1-4ec8-916b-ccfe75c93458'}]
2019-10-29 15:56:14,065 INFO [root] [emp_test.py test01_login_success:33] - [员工管理模块登陆接口中访问app.Headers的值为： {'Content-Type': 'application/json', 'Authorization': 'Bearer f7fcdf20-20b1-4ec8-916b-ccfe75c93458'}]
2019-10-29 15:56:14,065 INFO [root] [emp_api.py add_emp:26] - [添加员工接口中，请求头为：self.headers = {'Content-Type': 'application/json', 'Authorization': 'Bearer f7fcdf20-20b1-4ec8-916b-ccfe75c93458'}]
2019-10-29 15:56:14,151 INFO [root] [emp_test.py test02_add_emp:44] - [添加员工接口的返回值为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1189088534262534144'}}]
2019-10-29 15:56:14,151 INFO [root] [emp_test.py test02_add_emp:49] - [添加员工接口后，保存在app.EMP_ID的值为1189088534262534144]
2019-10-29 15:56:14,151 INFO [root] [emp_api.py query_emp:30] - [传入的查询员工API接口中的emp_id的值为:1189088534262534144]
2019-10-29 15:56:14,151 INFO [root] [emp_api.py query_emp:33] - [查询员工接口的URL为　http://182.92.81.159/api/sys/user/1189088534262534144]
2019-10-29 15:56:14,213 INFO [root] [emp_test.py test03_query_emp:57] - [查询员工接口返回的数据为：{'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1189088534262534144', 'mobile': '13700452328', 'username': '女娲007', 'password': '60bf1fd0954a0066829468035889e5f1', 'enableState': 1, 'createTime': None, 'companyId': '1', 'companyName': '传智播客', 'departmentId': '1066238836272664576', 'timeOfEntry': '2019-10-01T00:00:00.000+0000', 'formOfEmployment': 1, 'workNumber': '9833221', 'formOfManagement': None, 'workingCity': None, 'correctionTime': '2019-12-31T16:00:00.000+0000', 'inServiceStatus': None, 'departmentName': '财务部', 'roleIds': [], 'staffPhoto': None}}]
2019-10-29 16:03:52,713 INFO [root] [emp_test.py test01_login_success:27] - [员工管理模块登陆接口的调用结果为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': 'ded75590-880c-49b0-a543-3199a76eaa93'}]
2019-10-29 16:03:52,713 INFO [root] [emp_test.py test01_login_success:33] - [员工管理模块登陆接口中访问app.Headers的值为： {'Content-Type': 'application/json', 'Authorization': 'Bearer ded75590-880c-49b0-a543-3199a76eaa93'}]
2019-10-29 16:03:52,713 INFO [root] [emp_api.py add_emp:28] - [添加员工接口中，请求头为：self.headers = {'Content-Type': 'application/json', 'Authorization': 'Bearer ded75590-880c-49b0-a543-3199a76eaa93'}]
2019-10-29 16:03:52,790 INFO [root] [emp_test.py test02_add_emp:44] - [添加员工接口的返回值为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1189090457917149184'}}]
2019-10-29 16:03:52,790 INFO [root] [emp_test.py test02_add_emp:49] - [添加员工接口后，保存在app.EMP_ID的值为1189090457917149184]
2019-10-29 16:03:52,791 INFO [root] [emp_api.py query_emp:32] - [传入的查询员工API接口中的emp_id的值为:1189090457917149184]
2019-10-29 16:03:52,791 INFO [root] [emp_api.py query_emp:35] - [查询员工接口的URL为　http://182.92.81.159/api/sys/user/1189090457917149184]
2019-10-29 16:03:52,862 INFO [root] [emp_test.py test03_query_emp:57] - [查询员工接口返回的数据为：{'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1189090457917149184', 'mobile': '13700452329', 'username': '女娲008', 'password': '7a3daee0d7ee1db2765da11b6f3b4a8b', 'enableState': 1, 'createTime': None, 'companyId': '1', 'companyName': '传智播客', 'departmentId': '1066238836272664576', 'timeOfEntry': '2019-10-01T00:00:00.000+0000', 'formOfEmployment': 1, 'workNumber': '9833221', 'formOfManagement': None, 'workingCity': None, 'correctionTime': '2019-12-31T16:00:00.000+0000', 'inServiceStatus': None, 'departmentName': '财务部', 'roleIds': [], 'staffPhoto': None}}]
2019-10-29 16:03:52,938 INFO [root] [emp_test.py test04_update_emp:65] - [修改员工的结果为：{'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1189090457917149184'}}]
2019-10-29 16:03:52,999 INFO [root] [emp_test.py test05_delete_emp:73] - [删除员工的结果为：{'success': True, 'code': 10000, 'message': '操作成功！', 'data': None}]
2019-10-29 16:17:54,625 INFO [root] [emp_test.py test01_login_success:28] - [员工管理模块登陆接口的调用结果为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': 'a6f3a815-dbea-48b2-8575-429a1c47458d'}]
2019-10-29 16:17:54,626 INFO [root] [emp_test.py test01_login_success:34] - [员工管理模块登陆接口中访问app.Headers的值为： {'Content-Type': 'application/json', 'Authorization': 'Bearer a6f3a815-dbea-48b2-8575-429a1c47458d'}]
2019-10-29 16:17:54,626 INFO [root] [emp_api.py add_emp:28] - [添加员工接口中，请求头为：self.headers = {'Content-Type': 'application/json', 'Authorization': 'Bearer a6f3a815-dbea-48b2-8575-429a1c47458d'}]
2019-10-29 16:17:54,699 INFO [root] [emp_test.py test02_add_emp:45] - [添加员工接口的返回值为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1189093989135241216'}}]
2019-10-29 16:17:54,700 INFO [root] [emp_test.py test02_add_emp:50] - [添加员工接口后，保存在app.EMP_ID的值为1189093989135241216]
2019-10-29 16:17:54,702 INFO [root] [emp_api.py query_emp:32] - [传入的查询员工API接口中的emp_id的值为:1189093989135241216]
2019-10-29 16:17:54,702 INFO [root] [emp_api.py query_emp:35] - [查询员工接口的URL为　http://182.92.81.159/api/sys/user/1189093989135241216]
2019-10-29 16:17:54,772 INFO [root] [emp_test.py test03_query_emp:79] - [查询员工接口返回的数据为：{'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1189093989135241216', 'mobile': '13700452329', 'username': '女娲008', 'password': '7a3daee0d7ee1db2765da11b6f3b4a8b', 'enableState': 1, 'createTime': None, 'companyId': '1', 'companyName': '传智播客', 'departmentId': '1066238836272664576', 'timeOfEntry': '2019-10-01T00:00:00.000+0000', 'formOfEmployment': 1, 'workNumber': '9833221', 'formOfManagement': None, 'workingCity': None, 'correctionTime': '2019-12-31T16:00:00.000+0000', 'inServiceStatus': None, 'departmentName': '财务部', 'roleIds': [], 'staffPhoto': None}}]
2019-10-29 16:17:54,840 INFO [root] [emp_test.py test04_update_emp:87] - [修改员工的结果为：{'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1189093989135241216'}}]
2019-10-29 16:17:54,911 INFO [root] [emp_test.py test05_delete_emp:95] - [删除员工的结果为：{'success': True, 'code': 10000, 'message': '操作成功！', 'data': None}]
2019-10-29 16:18:53,663 INFO [root] [emp_test.py test01_login_success:28] - [员工管理模块登陆接口的调用结果为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': '2904ea7e-a237-4249-ad80-ff691cec510c'}]
2019-10-29 16:18:53,664 INFO [root] [emp_test.py test01_login_success:34] - [员工管理模块登陆接口中访问app.Headers的值为： {'Content-Type': 'application/json', 'Authorization': 'Bearer 2904ea7e-a237-4249-ad80-ff691cec510c'}]
2019-10-29 16:18:53,664 INFO [root] [emp_api.py add_emp:28] - [添加员工接口中，请求头为：self.headers = {'Content-Type': 'application/json', 'Authorization': 'Bearer 2904ea7e-a237-4249-ad80-ff691cec510c'}]
2019-10-29 16:18:53,736 INFO [root] [emp_test.py test02_add_emp:45] - [添加员工接口的返回值为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1189094236750172160'}}]
2019-10-29 16:18:53,736 INFO [root] [emp_test.py test02_add_emp:50] - [添加员工接口后，保存在app.EMP_ID的值为1189094236750172160]
2019-10-29 16:18:53,900 INFO [root] [emp_test.py test02_add_emp:66] - [从数据库查询的到的username是('女娲008',)]
2019-10-29 16:18:53,901 INFO [root] [emp_api.py query_emp:32] - [传入的查询员工API接口中的emp_id的值为:1189094236750172160]
2019-10-29 16:18:53,902 INFO [root] [emp_api.py query_emp:35] - [查询员工接口的URL为　http://182.92.81.159/api/sys/user/1189094236750172160]
2019-10-29 16:18:53,978 INFO [root] [emp_test.py test03_query_emp:79] - [查询员工接口返回的数据为：{'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1189094236750172160', 'mobile': '13700452329', 'username': '女娲008', 'password': '7a3daee0d7ee1db2765da11b6f3b4a8b', 'enableState': 1, 'createTime': None, 'companyId': '1', 'companyName': '传智播客', 'departmentId': '1066238836272664576', 'timeOfEntry': '2019-10-01T00:00:00.000+0000', 'formOfEmployment': 1, 'workNumber': '9833221', 'formOfManagement': None, 'workingCity': None, 'correctionTime': '2019-12-31T16:00:00.000+0000', 'inServiceStatus': None, 'departmentName': '财务部', 'roleIds': [], 'staffPhoto': None}}]
2019-10-29 16:18:54,064 INFO [root] [emp_test.py test04_update_emp:87] - [修改员工的结果为：{'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1189094236750172160'}}]
2019-10-29 16:18:54,136 INFO [root] [emp_test.py test05_delete_emp:95] - [删除员工的结果为：{'success': True, 'code': 10000, 'message': '操作成功！', 'data': None}]
2019-10-29 16:20:17,940 INFO [root] [emp_test.py test01_login_success:28] - [员工管理模块登陆接口的调用结果为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': 'cac4d089-ec6e-40e3-9461-c98628d966a8'}]
2019-10-29 16:20:17,940 INFO [root] [emp_test.py test01_login_success:34] - [员工管理模块登陆接口中访问app.Headers的值为： {'Content-Type': 'application/json', 'Authorization': 'Bearer cac4d089-ec6e-40e3-9461-c98628d966a8'}]
2019-10-29 16:20:17,941 INFO [root] [emp_api.py add_emp:28] - [添加员工接口中，请求头为：self.headers = {'Content-Type': 'application/json', 'Authorization': 'Bearer cac4d089-ec6e-40e3-9461-c98628d966a8'}]
2019-10-29 16:20:18,011 INFO [root] [emp_test.py test02_add_emp:45] - [添加员工接口的返回值为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1189094590233530368'}}]
2019-10-29 16:20:18,011 INFO [root] [emp_test.py test02_add_emp:50] - [添加员工接口后，保存在app.EMP_ID的值为1189094590233530368]
2019-10-29 16:20:18,188 INFO [root] [emp_test.py test02_add_emp:66] - [从数据库查询的到的username是('女娲008',)]
2019-10-29 16:20:18,189 INFO [root] [emp_api.py query_emp:32] - [传入的查询员工API接口中的emp_id的值为:1189094590233530368]
2019-10-29 16:20:18,189 INFO [root] [emp_api.py query_emp:35] - [查询员工接口的URL为　http://182.92.81.159/api/sys/user/1189094590233530368]
2019-10-29 16:20:18,260 INFO [root] [emp_test.py test03_query_emp:81] - [查询员工接口返回的数据为：{'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1189094590233530368', 'mobile': '13700452329', 'username': '女娲008', 'password': '7a3daee0d7ee1db2765da11b6f3b4a8b', 'enableState': 1, 'createTime': None, 'companyId': '1', 'companyName': '传智播客', 'departmentId': '1066238836272664576', 'timeOfEntry': '2019-10-01T00:00:00.000+0000', 'formOfEmployment': 1, 'workNumber': '9833221', 'formOfManagement': None, 'workingCity': None, 'correctionTime': '2019-12-31T16:00:00.000+0000', 'inServiceStatus': None, 'departmentName': '财务部', 'roleIds': [], 'staffPhoto': None}}]
2019-10-29 16:20:18,333 INFO [root] [emp_test.py test04_update_emp:89] - [修改员工的结果为：{'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1189094590233530368'}}]
2019-10-29 16:20:18,407 INFO [root] [emp_test.py test05_delete_emp:97] - [删除员工的结果为：{'success': True, 'code': 10000, 'message': '操作成功！', 'data': None}]
2019-10-29 16:41:14,502 INFO [root] [login_test.py test01_login_success:24] - [登陆成功的数据： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': '0eea2ab5-af38-43ac-99bd-dbe10c7e56af'}]
2019-10-29 16:41:14,572 INFO [root] [login_test.py test02_mobile_is_not_exists:40] - [用户名不存在： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}]
2019-10-29 16:41:14,643 INFO [root] [login_test.py test03_password_is_error:48] - [密码错误： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}]
2019-10-29 16:41:14,712 INFO [root] [login_test.py test04_requests_params_is_empyt:56] - [请求参数为空： {'success': False, 'code': 99999, 'message': '抱歉，系统繁忙，请稍后重试！', 'data': None}]
2019-10-29 16:41:14,779 INFO [root] [login_test.py test05_mobile_is_empyt:64] - [用户名为空： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}]
2019-10-29 16:41:14,845 INFO [root] [login_test.py test06_password_is_empty:72] - [密码为空： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}]
2019-10-29 16:41:14,845 INFO [root] [login_api.py login_invalid_params:34] - [{'verfify': '123456'}]
2019-10-29 16:41:14,845 INFO [root] [login_api.py login_invalid_params:37] - [无效参数的登陆数据 {'mobile': '13800000002', 'password': '123456', 'verfify': '123456'}]
2019-10-29 16:41:14,914 INFO [root] [login_test.py test07_add_invalid_params:80] - [添加一个无效的参数： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': '8bea2dbe-f8b6-4fbe-ae9f-0655a47a884f'}]
2019-10-29 16:41:14,985 INFO [root] [emp_test.py test01_login_success:28] - [员工管理模块登陆接口的调用结果为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': 'cd483281-70a2-4f72-a72f-bff017bc4f47'}]
2019-10-29 16:41:14,985 INFO [root] [emp_test.py test01_login_success:34] - [员工管理模块登陆接口中访问app.Headers的值为： {'Content-Type': 'application/json', 'Authorization': 'Bearer cd483281-70a2-4f72-a72f-bff017bc4f47'}]
2019-10-29 16:41:14,985 INFO [root] [emp_api.py add_emp:28] - [添加员工接口中，请求头为：self.headers = {'Content-Type': 'application/json', 'Authorization': 'Bearer cd483281-70a2-4f72-a72f-bff017bc4f47'}]
2019-10-29 16:41:15,060 INFO [root] [emp_test.py test02_add_emp:45] - [添加员工接口的返回值为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1189099862658207744'}}]
2019-10-29 16:41:15,060 INFO [root] [emp_test.py test02_add_emp:50] - [添加员工接口后，保存在app.EMP_ID的值为1189099862658207744]
2019-10-29 16:41:15,227 INFO [root] [emp_test.py test02_add_emp:66] - [从数据库查询的到的username是('女娲008',)]
2019-10-29 16:41:15,227 INFO [root] [emp_api.py query_emp:32] - [传入的查询员工API接口中的emp_id的值为:1189099862658207744]
2019-10-29 16:41:15,228 INFO [root] [emp_api.py query_emp:35] - [查询员工接口的URL为　http://182.92.81.159/api/sys/user/1189099862658207744]
2019-10-29 16:41:15,298 INFO [root] [emp_test.py test03_query_emp:81] - [查询员工接口返回的数据为：{'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1189099862658207744', 'mobile': '13700452329', 'username': '女娲008', 'password': '7a3daee0d7ee1db2765da11b6f3b4a8b', 'enableState': 1, 'createTime': None, 'companyId': '1', 'companyName': '传智播客', 'departmentId': '1066238836272664576', 'timeOfEntry': '2019-10-01T00:00:00.000+0000', 'formOfEmployment': 1, 'workNumber': '9833221', 'formOfManagement': None, 'workingCity': None, 'correctionTime': '2019-12-31T16:00:00.000+0000', 'inServiceStatus': None, 'departmentName': '财务部', 'roleIds': [], 'staffPhoto': None}}]
2019-10-29 16:41:15,374 INFO [root] [emp_test.py test04_update_emp:89] - [修改员工的结果为：{'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1189099862658207744'}}]
2019-10-29 16:41:15,448 INFO [root] [emp_test.py test05_delete_emp:97] - [删除员工的结果为：{'success': True, 'code': 10000, 'message': '操作成功！', 'data': None}]
2019-10-29 16:55:10,123 INFO [root] [utils.py read_login_data:31] - [登陆数据为：{'mobile': '1380000002', 'password': '123456', 'status_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}]
2019-10-29 16:55:10,123 INFO [root] [utils.py read_login_data:31] - [登陆数据为：{'mobile': '1390000002', 'password': '123456', 'status_code': 200, 'success': False, 'code': 20001, 'message': '用户名或者密码错误'}]
2019-10-29 16:55:10,123 INFO [root] [utils.py read_login_data:31] - [登陆数据为：{'mobile': '1380000002', 'password': 'error', 'status_code': 200, 'success': False, 'code': 20001, 'message': '用户名或者密码错误'}]
2019-10-29 16:55:10,123 INFO [root] [utils.py read_login_data:31] - [登陆数据为：{'mobile': '', 'password': 'error', 'status_code': 200, 'success': False, 'code': 20001, 'message': '用户名或者密码错误'}]
2019-10-29 16:55:10,123 INFO [root] [utils.py read_login_data:31] - [登陆数据为：{'mobile': '13800000002', 'password': '', 'status_code': 200, 'success': False, 'code': 20001, 'message': '用户名或者密码错误'}]
2019-10-29 16:58:41,939 INFO [root] [utils.py read_login_data:39] - [读取后，返回的登陆数据列表为： [('1380000002', '123456', 200, True, 10000, '操作成功'), ('1390000002', '123456', 200, False, 20001, '用户名或者密码错误'), ('1380000002', 'error', 200, False, 20001, '用户名或者密码错误'), ('', 'error', 200, False, 20001, '用户名或者密码错误'), ('13800000002', '', 200, False, 20001, '用户名或者密码错误')]]
2019-10-29 17:04:52,708 INFO [root] [utils.py read_login_data:39] - [读取后，返回的登陆数据列表为： [('1380000002', '123456', 200, True, 10000, '操作成功'), ('1390000002', '123456', 200, False, 20001, '用户名或者密码错误'), ('1380000002', 'error', 200, False, 20001, '用户名或者密码错误'), ('', 'error', 200, False, 20001, '用户名或者密码错误'), ('13800000002', '', 200, False, 20001, '用户名或者密码错误')]]
2019-10-29 17:04:52,708 INFO [root] [utils.py read_login_data:39] - [读取后，返回的登陆数据列表为： [('1380000002', '123456', 200, True, 10000, '操作成功'), ('1390000002', '123456', 200, False, 20001, '用户名或者密码错误'), ('1380000002', 'error', 200, False, 20001, '用户名或者密码错误'), ('', 'error', 200, False, 20001, '用户名或者密码错误'), ('13800000002', '', 200, False, 20001, '用户名或者密码错误')]]
2019-10-29 17:05:07,553 INFO [root] [utils.py read_login_data:39] - [读取后，返回的登陆数据列表为： [('1380000002', '123456', 200, True, 10000, '操作成功'), ('1390000002', '123456', 200, False, 20001, '用户名或者密码错误'), ('1380000002', 'error', 200, False, 20001, '用户名或者密码错误'), ('', 'error', 200, False, 20001, '用户名或者密码错误'), ('13800000002', '', 200, False, 20001, '用户名或者密码错误')]]
2019-10-29 17:05:07,553 INFO [root] [utils.py read_login_data:39] - [读取后，返回的登陆数据列表为： [('1380000002', '123456', 200, True, 10000, '操作成功'), ('1390000002', '123456', 200, False, 20001, '用户名或者密码错误'), ('1380000002', 'error', 200, False, 20001, '用户名或者密码错误'), ('', 'error', 200, False, 20001, '用户名或者密码错误'), ('13800000002', '', 200, False, 20001, '用户名或者密码错误')]]
2019-10-29 17:05:07,632 INFO [root] [login_parameterized.py test01_login:26] - [登陆成功的数据： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': '3e388f96-493f-4cfa-bc10-302566241f6a'}]
2019-10-29 17:05:07,632 INFO [root] [login_parameterized.py test01_login:26] - [登陆成功的数据： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': '3e388f96-493f-4cfa-bc10-302566241f6a'}]
2019-10-29 17:05:07,703 INFO [root] [login_parameterized.py test01_login:26] - [登陆成功的数据： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}]
2019-10-29 17:05:07,703 INFO [root] [login_parameterized.py test01_login:26] - [登陆成功的数据： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}]
2019-10-29 17:05:07,776 INFO [root] [login_parameterized.py test01_login:26] - [登陆成功的数据： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}]
2019-10-29 17:05:07,776 INFO [root] [login_parameterized.py test01_login:26] - [登陆成功的数据： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}]
2019-10-29 17:05:07,851 INFO [root] [login_parameterized.py test01_login:26] - [登陆成功的数据： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}]
2019-10-29 17:05:07,851 INFO [root] [login_parameterized.py test01_login:26] - [登陆成功的数据： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}]
2019-10-29 17:05:07,922 INFO [root] [login_parameterized.py test01_login:26] - [登陆成功的数据： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}]
2019-10-29 17:05:07,922 INFO [root] [login_parameterized.py test01_login:26] - [登陆成功的数据： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}]
2019-10-29 17:05:07,988 INFO [root] [login_parameterized.py test04_requests_params_is_empyt:42] - [请求参数为空： {'success': False, 'code': 99999, 'message': '抱歉，系统繁忙，请稍后重试！', 'data': None}]
2019-10-29 17:05:07,988 INFO [root] [login_parameterized.py test04_requests_params_is_empyt:42] - [请求参数为空： {'success': False, 'code': 99999, 'message': '抱歉，系统繁忙，请稍后重试！', 'data': None}]
2019-10-29 17:05:07,988 INFO [root] [login_api.py login_invalid_params:34] - [{'verfify': '123456'}]
2019-10-29 17:05:07,988 INFO [root] [login_api.py login_invalid_params:34] - [{'verfify': '123456'}]
2019-10-29 17:05:07,989 INFO [root] [login_api.py login_invalid_params:37] - [无效参数的登陆数据 {'mobile': '13800000002', 'password': '123456', 'verfify': '123456'}]
2019-10-29 17:05:07,989 INFO [root] [login_api.py login_invalid_params:37] - [无效参数的登陆数据 {'mobile': '13800000002', 'password': '123456', 'verfify': '123456'}]
2019-10-29 17:05:08,058 INFO [root] [login_parameterized.py test07_add_invalid_params:50] - [添加一个无效的参数： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': '9fa6a292-8b56-4beb-936d-cf3749534091'}]
2019-10-29 17:05:08,058 INFO [root] [login_parameterized.py test07_add_invalid_params:50] - [添加一个无效的参数： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': '9fa6a292-8b56-4beb-936d-cf3749534091'}]
2019-10-29 17:05:53,501 INFO [root] [utils.py read_login_data:39] - [读取后，返回的登陆数据列表为： [('1380000002', '123456', 200, True, 10000, '操作成功'), ('1390000002', '123456', 200, False, 20001, '用户名或密码错误'), ('1380000002', 'error', 200, False, 20001, '用户名或密码错误'), ('', 'error', 200, False, 20001, '用户名或密码错误'), ('13800000002', '', 200, False, 20001, '用户名或密码错误')]]
2019-10-29 17:05:53,501 INFO [root] [utils.py read_login_data:39] - [读取后，返回的登陆数据列表为： [('1380000002', '123456', 200, True, 10000, '操作成功'), ('1390000002', '123456', 200, False, 20001, '用户名或密码错误'), ('1380000002', 'error', 200, False, 20001, '用户名或密码错误'), ('', 'error', 200, False, 20001, '用户名或密码错误'), ('13800000002', '', 200, False, 20001, '用户名或密码错误')]]
2019-10-29 17:05:53,581 INFO [root] [login_parameterized.py test01_login:26] - [登陆成功的数据： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': '566936f3-def6-4c32-aadd-fe4b145379ea'}]
2019-10-29 17:05:53,581 INFO [root] [login_parameterized.py test01_login:26] - [登陆成功的数据： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': '566936f3-def6-4c32-aadd-fe4b145379ea'}]
2019-10-29 17:05:53,649 INFO [root] [login_parameterized.py test01_login:26] - [登陆成功的数据： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}]
2019-10-29 17:05:53,649 INFO [root] [login_parameterized.py test01_login:26] - [登陆成功的数据： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}]
2019-10-29 17:05:53,723 INFO [root] [login_parameterized.py test01_login:26] - [登陆成功的数据： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}]
2019-10-29 17:05:53,723 INFO [root] [login_parameterized.py test01_login:26] - [登陆成功的数据： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}]
2019-10-29 17:05:53,798 INFO [root] [login_parameterized.py test01_login:26] - [登陆成功的数据： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}]
2019-10-29 17:05:53,798 INFO [root] [login_parameterized.py test01_login:26] - [登陆成功的数据： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}]
2019-10-29 17:05:53,866 INFO [root] [login_parameterized.py test01_login:26] - [登陆成功的数据： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}]
2019-10-29 17:05:53,866 INFO [root] [login_parameterized.py test01_login:26] - [登陆成功的数据： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}]
2019-10-29 17:05:53,934 INFO [root] [login_parameterized.py test04_requests_params_is_empyt:42] - [请求参数为空： {'success': False, 'code': 99999, 'message': '抱歉，系统繁忙，请稍后重试！', 'data': None}]
2019-10-29 17:05:53,934 INFO [root] [login_parameterized.py test04_requests_params_is_empyt:42] - [请求参数为空： {'success': False, 'code': 99999, 'message': '抱歉，系统繁忙，请稍后重试！', 'data': None}]
2019-10-29 17:05:53,934 INFO [root] [login_api.py login_invalid_params:34] - [{'verfify': '123456'}]
2019-10-29 17:05:53,934 INFO [root] [login_api.py login_invalid_params:34] - [{'verfify': '123456'}]
2019-10-29 17:05:53,935 INFO [root] [login_api.py login_invalid_params:37] - [无效参数的登陆数据 {'mobile': '13800000002', 'password': '123456', 'verfify': '123456'}]
2019-10-29 17:05:53,935 INFO [root] [login_api.py login_invalid_params:37] - [无效参数的登陆数据 {'mobile': '13800000002', 'password': '123456', 'verfify': '123456'}]
2019-10-29 17:05:54,006 INFO [root] [login_parameterized.py test07_add_invalid_params:50] - [添加一个无效的参数： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': '9c25457a-e1a5-4fdd-a655-9bef0f10fb01'}]
2019-10-29 17:05:54,006 INFO [root] [login_parameterized.py test07_add_invalid_params:50] - [添加一个无效的参数： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': '9c25457a-e1a5-4fdd-a655-9bef0f10fb01'}]
2019-10-29 17:19:25,244 INFO [root] [utils.py read_emp_add:49] - [jsonData {'emp_add': {'username': '女娲010', 'mobile': '13700452330', 'status_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'emp_query': {'status_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'emp_update': {'username': '迪士尼乐园', 'status_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}}]
2019-10-29 17:19:50,891 INFO [root] [utils.py read_emp_add:49] - [jsonData {'emp_add': {'username': '女娲010', 'mobile': '13700452330', 'status_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'emp_query': {'status_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'emp_update': {'username': '迪士尼乐园', 'status_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}}]
2019-10-29 17:19:50,891 INFO [root] [utils.py read_emp_add:59] - [读取到的添加员工的数据为：[('女娲010', '13700452330', 200, True, 10000, '操作成功')]]
2019-10-29 17:40:10,452 INFO [root] [utils.py read_emp_add:49] - [jsonData {'emp_add': {'username': '女娲010', 'mobile': '13700452330', 'status_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'emp_query': {'status_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'emp_update': {'username': '迪士尼乐园', 'status_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}}]
2019-10-29 17:40:10,452 INFO [root] [utils.py read_emp_add:49] - [jsonData {'emp_add': {'username': '女娲010', 'mobile': '13700452330', 'status_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'emp_query': {'status_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'emp_update': {'username': '迪士尼乐园', 'status_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}}]
2019-10-29 17:40:10,453 INFO [root] [utils.py read_emp_add:59] - [读取到的添加员工的数据为：[('女娲010', '13700452330', 200, True, 10000, '操作成功')]]
2019-10-29 17:40:10,453 INFO [root] [utils.py read_emp_add:59] - [读取到的添加员工的数据为：[('女娲010', '13700452330', 200, True, 10000, '操作成功')]]
2019-10-29 17:40:10,530 INFO [root] [emp_parameterized.py test01_login_success:29] - [员工管理模块登陆接口的调用结果为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': '101e63e3-3528-47d3-90e0-d2349960f305'}]
2019-10-29 17:40:10,530 INFO [root] [emp_parameterized.py test01_login_success:29] - [员工管理模块登陆接口的调用结果为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': '101e63e3-3528-47d3-90e0-d2349960f305'}]
2019-10-29 17:40:10,530 INFO [root] [emp_parameterized.py test01_login_success:35] - [员工管理模块登陆接口中访问app.Headers的值为： {'Content-Type': 'application/json', 'Authorization': 'Bearer 101e63e3-3528-47d3-90e0-d2349960f305'}]
2019-10-29 17:40:10,530 INFO [root] [emp_parameterized.py test01_login_success:35] - [员工管理模块登陆接口中访问app.Headers的值为： {'Content-Type': 'application/json', 'Authorization': 'Bearer 101e63e3-3528-47d3-90e0-d2349960f305'}]
2019-10-29 17:40:10,531 INFO [root] [emp_api.py add_emp:28] - [添加员工接口中，请求头为：self.headers = {'Content-Type': 'application/json', 'Authorization': 'Bearer 101e63e3-3528-47d3-90e0-d2349960f305'}]
2019-10-29 17:40:10,531 INFO [root] [emp_api.py add_emp:28] - [添加员工接口中，请求头为：self.headers = {'Content-Type': 'application/json', 'Authorization': 'Bearer 101e63e3-3528-47d3-90e0-d2349960f305'}]
2019-10-29 17:40:10,604 INFO [root] [emp_parameterized.py test02_add_emp:47] - [添加员工接口的返回值为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1189114691770994688'}}]
2019-10-29 17:40:10,604 INFO [root] [emp_parameterized.py test02_add_emp:47] - [添加员工接口的返回值为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1189114691770994688'}}]
2019-10-29 17:40:10,605 INFO [root] [emp_parameterized.py test02_add_emp:52] - [添加员工接口后，保存在app.EMP_ID的值为1189114691770994688]
2019-10-29 17:40:10,605 INFO [root] [emp_parameterized.py test02_add_emp:52] - [添加员工接口后，保存在app.EMP_ID的值为1189114691770994688]
2019-10-29 17:40:10,777 INFO [root] [emp_parameterized.py test02_add_emp:68] - [从数据库查询的到的username是('女娲010',)]
2019-10-29 17:40:10,777 INFO [root] [emp_parameterized.py test02_add_emp:68] - [从数据库查询的到的username是('女娲010',)]
2019-10-29 17:40:10,777 INFO [root] [emp_api.py query_emp:32] - [传入的查询员工API接口中的emp_id的值为:1189114691770994688]
2019-10-29 17:40:10,777 INFO [root] [emp_api.py query_emp:32] - [传入的查询员工API接口中的emp_id的值为:1189114691770994688]
2019-10-29 17:40:10,777 INFO [root] [emp_api.py query_emp:35] - [查询员工接口的URL为　http://182.92.81.159/api/sys/user/1189114691770994688]
2019-10-29 17:40:10,777 INFO [root] [emp_api.py query_emp:35] - [查询员工接口的URL为　http://182.92.81.159/api/sys/user/1189114691770994688]
2019-10-29 17:40:10,852 INFO [root] [emp_parameterized.py test03_query_emp:83] - [查询员工接口返回的数据为：{'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1189114691770994688', 'mobile': '13700452330', 'username': '女娲010', 'password': '4faf9b4fc3c15f39b6184727164dc545', 'enableState': 1, 'createTime': None, 'companyId': '1', 'companyName': '传智播客', 'departmentId': '1066238836272664576', 'timeOfEntry': '2019-10-01T00:00:00.000+0000', 'formOfEmployment': 1, 'workNumber': '9833221', 'formOfManagement': None, 'workingCity': None, 'correctionTime': '2019-12-31T16:00:00.000+0000', 'inServiceStatus': None, 'departmentName': '财务部', 'roleIds': [], 'staffPhoto': None}}]
2019-10-29 17:40:10,852 INFO [root] [emp_parameterized.py test03_query_emp:83] - [查询员工接口返回的数据为：{'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1189114691770994688', 'mobile': '13700452330', 'username': '女娲010', 'password': '4faf9b4fc3c15f39b6184727164dc545', 'enableState': 1, 'createTime': None, 'companyId': '1', 'companyName': '传智播客', 'departmentId': '1066238836272664576', 'timeOfEntry': '2019-10-01T00:00:00.000+0000', 'formOfEmployment': 1, 'workNumber': '9833221', 'formOfManagement': None, 'workingCity': None, 'correctionTime': '2019-12-31T16:00:00.000+0000', 'inServiceStatus': None, 'departmentName': '财务部', 'roleIds': [], 'staffPhoto': None}}]
2019-10-29 17:40:10,923 INFO [root] [emp_parameterized.py test04_update_emp:91] - [修改员工的结果为：{'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1189114691770994688'}}]
2019-10-29 17:40:10,923 INFO [root] [emp_parameterized.py test04_update_emp:91] - [修改员工的结果为：{'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1189114691770994688'}}]
2019-10-29 17:40:11,006 INFO [root] [emp_parameterized.py test05_delete_emp:99] - [删除员工的结果为：{'success': True, 'code': 10000, 'message': '操作成功！', 'data': None}]
2019-10-29 17:40:11,006 INFO [root] [emp_parameterized.py test05_delete_emp:99] - [删除员工的结果为：{'success': True, 'code': 10000, 'message': '操作成功！', 'data': None}]
2019-10-29 17:43:36,427 INFO [root] [utils.py read_emp_query:68] - [jsonData {'emp_add': {'username': '女娲010', 'mobile': '13700452330', 'status_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'emp_query': {'status_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'emp_update': {'username': '迪士尼乐园', 'status_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}}]
2019-10-29 17:43:36,427 INFO [root] [utils.py read_emp_query:77] - [读取员工数据时，返回的数据为：[(200, True, 10000, '操作成功')]]
2019-10-29 17:45:28,812 INFO [root] [utils.py read_emp_add:49] - [jsonData {'emp_add': {'username': '女娲010', 'mobile': '13700452330', 'status_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'emp_query': {'status_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'emp_update': {'username': '迪士尼乐园', 'status_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}}]
2019-10-29 17:45:28,812 INFO [root] [utils.py read_emp_add:49] - [jsonData {'emp_add': {'username': '女娲010', 'mobile': '13700452330', 'status_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'emp_query': {'status_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'emp_update': {'username': '迪士尼乐园', 'status_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}}]
2019-10-29 17:45:28,812 INFO [root] [utils.py read_emp_add:59] - [读取到的添加员工的数据为：[('女娲010', '13700452330', 200, True, 10000, '操作成功')]]
2019-10-29 17:45:28,812 INFO [root] [utils.py read_emp_add:59] - [读取到的添加员工的数据为：[('女娲010', '13700452330', 200, True, 10000, '操作成功')]]
2019-10-29 17:45:28,822 INFO [root] [utils.py query_emp_query:68] - [jsonData {'emp_add': {'username': '女娲010', 'mobile': '13700452330', 'status_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'emp_query': {'status_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'emp_update': {'username': '迪士尼乐园', 'status_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}}]
2019-10-29 17:45:28,822 INFO [root] [utils.py query_emp_query:68] - [jsonData {'emp_add': {'username': '女娲010', 'mobile': '13700452330', 'status_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'emp_query': {'status_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'emp_update': {'username': '迪士尼乐园', 'status_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}}]
2019-10-29 17:45:28,822 INFO [root] [utils.py query_emp_query:77] - [读取员工数据时，返回的数据为：[(200, True, 10000, '操作成功')]]
2019-10-29 17:45:28,822 INFO [root] [utils.py query_emp_query:77] - [读取员工数据时，返回的数据为：[(200, True, 10000, '操作成功')]]
2019-10-29 17:45:28,903 INFO [root] [emp_parameterized.py test01_login_success:29] - [员工管理模块登陆接口的调用结果为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': '3dfccfd5-2929-4df6-8c55-fd80ba7bff42'}]
2019-10-29 17:45:28,903 INFO [root] [emp_parameterized.py test01_login_success:29] - [员工管理模块登陆接口的调用结果为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': '3dfccfd5-2929-4df6-8c55-fd80ba7bff42'}]
2019-10-29 17:45:28,903 INFO [root] [emp_parameterized.py test01_login_success:35] - [员工管理模块登陆接口中访问app.Headers的值为： {'Content-Type': 'application/json', 'Authorization': 'Bearer 3dfccfd5-2929-4df6-8c55-fd80ba7bff42'}]
2019-10-29 17:45:28,903 INFO [root] [emp_parameterized.py test01_login_success:35] - [员工管理模块登陆接口中访问app.Headers的值为： {'Content-Type': 'application/json', 'Authorization': 'Bearer 3dfccfd5-2929-4df6-8c55-fd80ba7bff42'}]
2019-10-29 17:45:28,904 INFO [root] [emp_api.py add_emp:28] - [添加员工接口中，请求头为：self.headers = {'Content-Type': 'application/json', 'Authorization': 'Bearer 3dfccfd5-2929-4df6-8c55-fd80ba7bff42'}]
2019-10-29 17:45:28,904 INFO [root] [emp_api.py add_emp:28] - [添加员工接口中，请求头为：self.headers = {'Content-Type': 'application/json', 'Authorization': 'Bearer 3dfccfd5-2929-4df6-8c55-fd80ba7bff42'}]
2019-10-29 17:45:28,977 INFO [root] [emp_parameterized.py test02_add_emp:47] - [添加员工接口的返回值为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1189116027124142080'}}]
2019-10-29 17:45:28,977 INFO [root] [emp_parameterized.py test02_add_emp:47] - [添加员工接口的返回值为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1189116027124142080'}}]
2019-10-29 17:45:28,977 INFO [root] [emp_parameterized.py test02_add_emp:52] - [添加员工接口后，保存在app.EMP_ID的值为1189116027124142080]
2019-10-29 17:45:28,977 INFO [root] [emp_parameterized.py test02_add_emp:52] - [添加员工接口后，保存在app.EMP_ID的值为1189116027124142080]
2019-10-29 17:45:29,146 INFO [root] [emp_parameterized.py test02_add_emp:68] - [从数据库查询的到的username是('女娲010',)]
2019-10-29 17:45:29,146 INFO [root] [emp_parameterized.py test02_add_emp:68] - [从数据库查询的到的username是('女娲010',)]
2019-10-29 17:45:29,146 INFO [root] [emp_api.py query_emp:32] - [传入的查询员工API接口中的emp_id的值为:1189116027124142080]
2019-10-29 17:45:29,146 INFO [root] [emp_api.py query_emp:32] - [传入的查询员工API接口中的emp_id的值为:1189116027124142080]
2019-10-29 17:45:29,148 INFO [root] [emp_api.py query_emp:35] - [查询员工接口的URL为　http://182.92.81.159/api/sys/user/1189116027124142080]
2019-10-29 17:45:29,148 INFO [root] [emp_api.py query_emp:35] - [查询员工接口的URL为　http://182.92.81.159/api/sys/user/1189116027124142080]
2019-10-29 17:45:29,221 INFO [root] [emp_parameterized.py test03_query_emp:84] - [查询员工接口返回的数据为：{'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1189116027124142080', 'mobile': '13700452330', 'username': '女娲010', 'password': '4faf9b4fc3c15f39b6184727164dc545', 'enableState': 1, 'createTime': None, 'companyId': '1', 'companyName': '传智播客', 'departmentId': '1066238836272664576', 'timeOfEntry': '2019-10-01T00:00:00.000+0000', 'formOfEmployment': 1, 'workNumber': '9833221', 'formOfManagement': None, 'workingCity': None, 'correctionTime': '2019-12-31T16:00:00.000+0000', 'inServiceStatus': None, 'departmentName': '财务部', 'roleIds': [], 'staffPhoto': None}}]
2019-10-29 17:45:29,221 INFO [root] [emp_parameterized.py test03_query_emp:84] - [查询员工接口返回的数据为：{'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1189116027124142080', 'mobile': '13700452330', 'username': '女娲010', 'password': '4faf9b4fc3c15f39b6184727164dc545', 'enableState': 1, 'createTime': None, 'companyId': '1', 'companyName': '传智播客', 'departmentId': '1066238836272664576', 'timeOfEntry': '2019-10-01T00:00:00.000+0000', 'formOfEmployment': 1, 'workNumber': '9833221', 'formOfManagement': None, 'workingCity': None, 'correctionTime': '2019-12-31T16:00:00.000+0000', 'inServiceStatus': None, 'departmentName': '财务部', 'roleIds': [], 'staffPhoto': None}}]
2019-10-29 17:45:29,295 INFO [root] [emp_parameterized.py test04_update_emp:92] - [修改员工的结果为：{'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1189116027124142080'}}]
2019-10-29 17:45:29,295 INFO [root] [emp_parameterized.py test04_update_emp:92] - [修改员工的结果为：{'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1189116027124142080'}}]
2019-10-29 17:45:29,368 INFO [root] [emp_parameterized.py test05_delete_emp:100] - [删除员工的结果为：{'success': True, 'code': 10000, 'message': '操作成功！', 'data': None}]
2019-10-29 17:45:29,368 INFO [root] [emp_parameterized.py test05_delete_emp:100] - [删除员工的结果为：{'success': True, 'code': 10000, 'message': '操作成功！', 'data': None}]
2019-10-29 17:48:40,837 INFO [root] [utils.py update_emp_data:94] - [修改员工数据时，返回的数据为：[('迪士尼乐园', 200, True, 10000, '操作成功')]]
2019-10-29 17:49:40,769 INFO [root] [utils.py read_emp_add:49] - [jsonData {'emp_add': {'username': '女娲010', 'mobile': '13700452330', 'status_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'emp_query': {'status_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'emp_update': {'username': '迪士尼乐园', 'status_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}}]
2019-10-29 17:49:40,769 INFO [root] [utils.py read_emp_add:49] - [jsonData {'emp_add': {'username': '女娲010', 'mobile': '13700452330', 'status_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'emp_query': {'status_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'emp_update': {'username': '迪士尼乐园', 'status_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}}]
2019-10-29 17:49:40,770 INFO [root] [utils.py read_emp_add:59] - [读取到的添加员工的数据为：[('女娲010', '13700452330', 200, True, 10000, '操作成功')]]
2019-10-29 17:49:40,770 INFO [root] [utils.py read_emp_add:59] - [读取到的添加员工的数据为：[('女娲010', '13700452330', 200, True, 10000, '操作成功')]]
2019-10-29 17:49:40,784 INFO [root] [utils.py query_emp:77] - [读取员工数据时，返回的数据为：[(200, True, 10000, '操作成功')]]
2019-10-29 17:49:40,784 INFO [root] [utils.py query_emp:77] - [读取员工数据时，返回的数据为：[(200, True, 10000, '操作成功')]]
2019-10-29 17:49:40,796 INFO [root] [utils.py update_emp_data:94] - [修改员工数据时，返回的数据为：[('迪士尼乐园', 200, True, 10000, '操作成功')]]
2019-10-29 17:49:40,796 INFO [root] [utils.py update_emp_data:94] - [修改员工数据时，返回的数据为：[('迪士尼乐园', 200, True, 10000, '操作成功')]]
2019-10-29 17:49:40,873 INFO [root] [emp_parameterized.py test01_login_success:29] - [员工管理模块登陆接口的调用结果为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': '013be1fb-6bff-496e-85e4-a86e97fecba4'}]
2019-10-29 17:49:40,873 INFO [root] [emp_parameterized.py test01_login_success:29] - [员工管理模块登陆接口的调用结果为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': '013be1fb-6bff-496e-85e4-a86e97fecba4'}]
2019-10-29 17:49:40,873 INFO [root] [emp_parameterized.py test01_login_success:35] - [员工管理模块登陆接口中访问app.Headers的值为： {'Content-Type': 'application/json', 'Authorization': 'Bearer 013be1fb-6bff-496e-85e4-a86e97fecba4'}]
2019-10-29 17:49:40,873 INFO [root] [emp_parameterized.py test01_login_success:35] - [员工管理模块登陆接口中访问app.Headers的值为： {'Content-Type': 'application/json', 'Authorization': 'Bearer 013be1fb-6bff-496e-85e4-a86e97fecba4'}]
2019-10-29 17:49:40,874 INFO [root] [emp_api.py add_emp:28] - [添加员工接口中，请求头为：self.headers = {'Content-Type': 'application/json', 'Authorization': 'Bearer 013be1fb-6bff-496e-85e4-a86e97fecba4'}]
2019-10-29 17:49:40,874 INFO [root] [emp_api.py add_emp:28] - [添加员工接口中，请求头为：self.headers = {'Content-Type': 'application/json', 'Authorization': 'Bearer 013be1fb-6bff-496e-85e4-a86e97fecba4'}]
2019-10-29 17:49:40,947 INFO [root] [emp_parameterized.py test02_add_emp:47] - [添加员工接口的返回值为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1189117083950338048'}}]
2019-10-29 17:49:40,947 INFO [root] [emp_parameterized.py test02_add_emp:47] - [添加员工接口的返回值为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1189117083950338048'}}]
2019-10-29 17:49:40,947 INFO [root] [emp_parameterized.py test02_add_emp:52] - [添加员工接口后，保存在app.EMP_ID的值为1189117083950338048]
2019-10-29 17:49:40,947 INFO [root] [emp_parameterized.py test02_add_emp:52] - [添加员工接口后，保存在app.EMP_ID的值为1189117083950338048]
2019-10-29 17:49:41,113 INFO [root] [emp_parameterized.py test02_add_emp:68] - [从数据库查询的到的username是('女娲010',)]
2019-10-29 17:49:41,113 INFO [root] [emp_parameterized.py test02_add_emp:68] - [从数据库查询的到的username是('女娲010',)]
2019-10-29 17:49:41,114 INFO [root] [emp_api.py query_emp:32] - [传入的查询员工API接口中的emp_id的值为:1189117083950338048]
2019-10-29 17:49:41,114 INFO [root] [emp_api.py query_emp:32] - [传入的查询员工API接口中的emp_id的值为:1189117083950338048]
2019-10-29 17:49:41,114 INFO [root] [emp_api.py query_emp:35] - [查询员工接口的URL为　http://182.92.81.159/api/sys/user/1189117083950338048]
2019-10-29 17:49:41,114 INFO [root] [emp_api.py query_emp:35] - [查询员工接口的URL为　http://182.92.81.159/api/sys/user/1189117083950338048]
2019-10-29 17:49:41,188 INFO [root] [emp_parameterized.py test03_query_emp:84] - [查询员工接口返回的数据为：{'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1189117083950338048', 'mobile': '13700452330', 'username': '女娲010', 'password': '4faf9b4fc3c15f39b6184727164dc545', 'enableState': 1, 'createTime': None, 'companyId': '1', 'companyName': '传智播客', 'departmentId': '1066238836272664576', 'timeOfEntry': '2019-10-01T00:00:00.000+0000', 'formOfEmployment': 1, 'workNumber': '9833221', 'formOfManagement': None, 'workingCity': None, 'correctionTime': '2019-12-31T16:00:00.000+0000', 'inServiceStatus': None, 'departmentName': '财务部', 'roleIds': [], 'staffPhoto': None}}]
2019-10-29 17:49:41,188 INFO [root] [emp_parameterized.py test03_query_emp:84] - [查询员工接口返回的数据为：{'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1189117083950338048', 'mobile': '13700452330', 'username': '女娲010', 'password': '4faf9b4fc3c15f39b6184727164dc545', 'enableState': 1, 'createTime': None, 'companyId': '1', 'companyName': '传智播客', 'departmentId': '1066238836272664576', 'timeOfEntry': '2019-10-01T00:00:00.000+0000', 'formOfEmployment': 1, 'workNumber': '9833221', 'formOfManagement': None, 'workingCity': None, 'correctionTime': '2019-12-31T16:00:00.000+0000', 'inServiceStatus': None, 'departmentName': '财务部', 'roleIds': [], 'staffPhoto': None}}]
2019-10-29 17:49:41,260 INFO [root] [emp_parameterized.py test04_update_emp:93] - [修改员工的结果为：{'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1189117083950338048'}}]
2019-10-29 17:49:41,260 INFO [root] [emp_parameterized.py test04_update_emp:93] - [修改员工的结果为：{'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1189117083950338048'}}]
2019-10-29 17:49:41,333 INFO [root] [emp_parameterized.py test05_delete_emp:101] - [删除员工的结果为：{'success': True, 'code': 10000, 'message': '操作成功！', 'data': None}]
2019-10-29 17:49:41,333 INFO [root] [emp_parameterized.py test05_delete_emp:101] - [删除员工的结果为：{'success': True, 'code': 10000, 'message': '操作成功！', 'data': None}]
2019-10-29 17:52:40,471 INFO [root] [utils.py delete_emp_data:110] - [删除员工用例的数据为：[(200, True, 10000, '操作成功')]]
2019-10-29 17:53:46,902 INFO [root] [utils.py read_emp_add:49] - [jsonData {'emp_add': {'username': '女娲010', 'mobile': '13700452330', 'status_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'emp_query': {'status_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'emp_update': {'username': '迪士尼乐园', 'status_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'emp_delete': {'status_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}}]
2019-10-29 17:53:46,902 INFO [root] [utils.py read_emp_add:49] - [jsonData {'emp_add': {'username': '女娲010', 'mobile': '13700452330', 'status_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'emp_query': {'status_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'emp_update': {'username': '迪士尼乐园', 'status_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'emp_delete': {'status_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}}]
2019-10-29 17:53:46,903 INFO [root] [utils.py read_emp_add:59] - [读取到的添加员工的数据为：[('女娲010', '13700452330', 200, True, 10000, '操作成功')]]
2019-10-29 17:53:46,903 INFO [root] [utils.py read_emp_add:59] - [读取到的添加员工的数据为：[('女娲010', '13700452330', 200, True, 10000, '操作成功')]]
2019-10-29 17:53:46,911 INFO [root] [utils.py query_emp:77] - [读取员工数据时，返回的数据为：[(200, True, 10000, '操作成功')]]
2019-10-29 17:53:46,911 INFO [root] [utils.py query_emp:77] - [读取员工数据时，返回的数据为：[(200, True, 10000, '操作成功')]]
2019-10-29 17:53:46,920 INFO [root] [utils.py update_emp_data:94] - [修改员工数据时，返回的数据为：[('迪士尼乐园', 200, True, 10000, '操作成功')]]
2019-10-29 17:53:46,920 INFO [root] [utils.py update_emp_data:94] - [修改员工数据时，返回的数据为：[('迪士尼乐园', 200, True, 10000, '操作成功')]]
2019-10-29 17:53:46,930 INFO [root] [utils.py delete_emp_data:110] - [删除员工用例的数据为：[(200, True, 10000, '操作成功')]]
2019-10-29 17:53:46,930 INFO [root] [utils.py delete_emp_data:110] - [删除员工用例的数据为：[(200, True, 10000, '操作成功')]]
2019-10-29 17:53:47,005 INFO [root] [emp_parameterized.py test01_login_success:29] - [员工管理模块登陆接口的调用结果为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': '9bf60acd-6c0b-46e2-8b9e-066b976f51d6'}]
2019-10-29 17:53:47,005 INFO [root] [emp_parameterized.py test01_login_success:29] - [员工管理模块登陆接口的调用结果为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': '9bf60acd-6c0b-46e2-8b9e-066b976f51d6'}]
2019-10-29 17:53:47,005 INFO [root] [emp_parameterized.py test01_login_success:35] - [员工管理模块登陆接口中访问app.Headers的值为： {'Content-Type': 'application/json', 'Authorization': 'Bearer 9bf60acd-6c0b-46e2-8b9e-066b976f51d6'}]
2019-10-29 17:53:47,005 INFO [root] [emp_parameterized.py test01_login_success:35] - [员工管理模块登陆接口中访问app.Headers的值为： {'Content-Type': 'application/json', 'Authorization': 'Bearer 9bf60acd-6c0b-46e2-8b9e-066b976f51d6'}]
2019-10-29 17:53:47,006 INFO [root] [emp_api.py add_emp:28] - [添加员工接口中，请求头为：self.headers = {'Content-Type': 'application/json', 'Authorization': 'Bearer 9bf60acd-6c0b-46e2-8b9e-066b976f51d6'}]
2019-10-29 17:53:47,006 INFO [root] [emp_api.py add_emp:28] - [添加员工接口中，请求头为：self.headers = {'Content-Type': 'application/json', 'Authorization': 'Bearer 9bf60acd-6c0b-46e2-8b9e-066b976f51d6'}]
2019-10-29 17:53:47,081 INFO [root] [emp_parameterized.py test02_add_emp:47] - [添加员工接口的返回值为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1189118116315353088'}}]
2019-10-29 17:53:47,081 INFO [root] [emp_parameterized.py test02_add_emp:47] - [添加员工接口的返回值为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1189118116315353088'}}]
2019-10-29 17:53:47,081 INFO [root] [emp_parameterized.py test02_add_emp:52] - [添加员工接口后，保存在app.EMP_ID的值为1189118116315353088]
2019-10-29 17:53:47,081 INFO [root] [emp_parameterized.py test02_add_emp:52] - [添加员工接口后，保存在app.EMP_ID的值为1189118116315353088]
2019-10-29 17:53:47,244 INFO [root] [emp_parameterized.py test02_add_emp:68] - [从数据库查询的到的username是('女娲010',)]
2019-10-29 17:53:47,244 INFO [root] [emp_parameterized.py test02_add_emp:68] - [从数据库查询的到的username是('女娲010',)]
2019-10-29 17:53:47,244 INFO [root] [emp_api.py query_emp:32] - [传入的查询员工API接口中的emp_id的值为:1189118116315353088]
2019-10-29 17:53:47,244 INFO [root] [emp_api.py query_emp:32] - [传入的查询员工API接口中的emp_id的值为:1189118116315353088]
2019-10-29 17:53:47,244 INFO [root] [emp_api.py query_emp:35] - [查询员工接口的URL为　http://182.92.81.159/api/sys/user/1189118116315353088]
2019-10-29 17:53:47,244 INFO [root] [emp_api.py query_emp:35] - [查询员工接口的URL为　http://182.92.81.159/api/sys/user/1189118116315353088]
2019-10-29 17:53:47,317 INFO [root] [emp_parameterized.py test03_query_emp:84] - [查询员工接口返回的数据为：{'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1189118116315353088', 'mobile': '13700452330', 'username': '女娲010', 'password': '4faf9b4fc3c15f39b6184727164dc545', 'enableState': 1, 'createTime': None, 'companyId': '1', 'companyName': '传智播客', 'departmentId': '1066238836272664576', 'timeOfEntry': '2019-10-01T00:00:00.000+0000', 'formOfEmployment': 1, 'workNumber': '9833221', 'formOfManagement': None, 'workingCity': None, 'correctionTime': '2019-12-31T16:00:00.000+0000', 'inServiceStatus': None, 'departmentName': '财务部', 'roleIds': [], 'staffPhoto': None}}]
2019-10-29 17:53:47,317 INFO [root] [emp_parameterized.py test03_query_emp:84] - [查询员工接口返回的数据为：{'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1189118116315353088', 'mobile': '13700452330', 'username': '女娲010', 'password': '4faf9b4fc3c15f39b6184727164dc545', 'enableState': 1, 'createTime': None, 'companyId': '1', 'companyName': '传智播客', 'departmentId': '1066238836272664576', 'timeOfEntry': '2019-10-01T00:00:00.000+0000', 'formOfEmployment': 1, 'workNumber': '9833221', 'formOfManagement': None, 'workingCity': None, 'correctionTime': '2019-12-31T16:00:00.000+0000', 'inServiceStatus': None, 'departmentName': '财务部', 'roleIds': [], 'staffPhoto': None}}]
2019-10-29 17:53:47,393 INFO [root] [emp_parameterized.py test04_update_emp:93] - [修改员工的结果为：{'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1189118116315353088'}}]
2019-10-29 17:53:47,393 INFO [root] [emp_parameterized.py test04_update_emp:93] - [修改员工的结果为：{'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1189118116315353088'}}]
2019-10-29 17:53:47,470 INFO [root] [emp_parameterized.py test05_delete_emp:102] - [删除员工的结果为：{'success': True, 'code': 10000, 'message': '操作成功！', 'data': None}]
2019-10-29 17:53:47,470 INFO [root] [emp_parameterized.py test05_delete_emp:102] - [删除员工的结果为：{'success': True, 'code': 10000, 'message': '操作成功！', 'data': None}]
2019-10-29 18:00:47,356 INFO [root] [utils.py read_login_data:55] - [读取后，返回的登陆数据列表为： [('登陆成功', '1380000002', '123456', 200, True, 10000, '操作成功'), ('用户名或密码错误', '1390000002', '123456', 200, False, 20001, '用户名或密码错误'), ('密码错误', '1380000002', 'error', 200, False, 20001, '用户名或密码错误'), ('手机号码为空', '', 'error', 200, False, 20001, '用户名或密码错误'), ('密码为空', '13800000002', '', 200, False, 20001, '用户名或密码错误')]]
2019-10-29 18:00:47,356 INFO [root] [utils.py read_login_data:55] - [读取后，返回的登陆数据列表为： [('登陆成功', '1380000002', '123456', 200, True, 10000, '操作成功'), ('用户名或密码错误', '1390000002', '123456', 200, False, 20001, '用户名或密码错误'), ('密码错误', '1380000002', 'error', 200, False, 20001, '用户名或密码错误'), ('手机号码为空', '', 'error', 200, False, 20001, '用户名或密码错误'), ('密码为空', '13800000002', '', 200, False, 20001, '用户名或密码错误')]]
2019-10-29 18:01:43,016 INFO [root] [utils.py read_login_data:55] - [读取后，返回的登陆数据列表为： [('登陆成功', '1380000002', '123456', 200, True, 10000, '操作成功'), ('用户名或密码错误', '1390000002', '123456', 200, False, 20001, '用户名或密码错误'), ('密码错误', '1380000002', 'error', 200, False, 20001, '用户名或密码错误'), ('手机号码为空', '', 'error', 200, False, 20001, '用户名或密码错误'), ('密码为空', '13800000002', '', 200, False, 20001, '用户名或密码错误')]]
2019-10-29 18:01:43,016 INFO [root] [utils.py read_login_data:55] - [读取后，返回的登陆数据列表为： [('登陆成功', '1380000002', '123456', 200, True, 10000, '操作成功'), ('用户名或密码错误', '1390000002', '123456', 200, False, 20001, '用户名或密码错误'), ('密码错误', '1380000002', 'error', 200, False, 20001, '用户名或密码错误'), ('手机号码为空', '', 'error', 200, False, 20001, '用户名或密码错误'), ('密码为空', '13800000002', '', 200, False, 20001, '用户名或密码错误')]]
2019-10-29 18:02:28,072 INFO [root] [utils.py read_login_data:56] - [读取后，返回的登陆数据列表为： [('登陆成功', '1380000002', '123456', 200, True, 10000, '操作成功'), ('用户名或密码错误', '1390000002', '123456', 200, False, 20001, '用户名或密码错误'), ('密码错误', '1380000002', 'error', 200, False, 20001, '用户名或密码错误'), ('手机号码为空', '', 'error', 200, False, 20001, '用户名或密码错误'), ('密码为空', '13800000002', '', 200, False, 20001, '用户名或密码错误')]]
2019-10-29 18:02:28,072 INFO [root] [utils.py read_login_data:56] - [读取后，返回的登陆数据列表为： [('登陆成功', '1380000002', '123456', 200, True, 10000, '操作成功'), ('用户名或密码错误', '1390000002', '123456', 200, False, 20001, '用户名或密码错误'), ('密码错误', '1380000002', 'error', 200, False, 20001, '用户名或密码错误'), ('手机号码为空', '', 'error', 200, False, 20001, '用户名或密码错误'), ('密码为空', '13800000002', '', 200, False, 20001, '用户名或密码错误')]]
2019-10-29 18:02:28,150 INFO [root] [login_parameterized.py test01_login:26] - [登陆成功的数据： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}]
2019-10-29 18:02:28,150 INFO [root] [login_parameterized.py test01_login:26] - [登陆成功的数据： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}]
2019-10-29 18:02:28,225 INFO [root] [login_parameterized.py test01_login:26] - [登陆成功的数据： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}]
2019-10-29 18:02:28,225 INFO [root] [login_parameterized.py test01_login:26] - [登陆成功的数据： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}]
2019-10-29 18:02:28,294 INFO [root] [login_parameterized.py test01_login:26] - [登陆成功的数据： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}]
2019-10-29 18:02:28,294 INFO [root] [login_parameterized.py test01_login:26] - [登陆成功的数据： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}]
2019-10-29 18:02:28,363 INFO [root] [login_parameterized.py test01_login:26] - [登陆成功的数据： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}]
2019-10-29 18:02:28,363 INFO [root] [login_parameterized.py test01_login:26] - [登陆成功的数据： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}]
2019-10-29 18:02:28,433 INFO [root] [login_parameterized.py test01_login:26] - [登陆成功的数据： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': '06cf4cb8-aa5c-4636-b7ac-b11d6f0fe4ae'}]
2019-10-29 18:02:28,433 INFO [root] [login_parameterized.py test01_login:26] - [登陆成功的数据： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': '06cf4cb8-aa5c-4636-b7ac-b11d6f0fe4ae'}]
2019-10-29 18:02:28,512 INFO [root] [login_parameterized.py test04_requests_params_is_empyt:42] - [请求参数为空： {'success': False, 'code': 99999, 'message': '抱歉，系统繁忙，请稍后重试！', 'data': None}]
2019-10-29 18:02:28,512 INFO [root] [login_parameterized.py test04_requests_params_is_empyt:42] - [请求参数为空： {'success': False, 'code': 99999, 'message': '抱歉，系统繁忙，请稍后重试！', 'data': None}]
2019-10-29 18:02:28,512 INFO [root] [login_api.py login_invalid_params:34] - [{'verfify': '123456'}]
2019-10-29 18:02:28,512 INFO [root] [login_api.py login_invalid_params:34] - [{'verfify': '123456'}]
2019-10-29 18:02:28,512 INFO [root] [login_api.py login_invalid_params:37] - [无效参数的登陆数据 {'mobile': '13800000002', 'password': '123456', 'verfify': '123456'}]
2019-10-29 18:02:28,512 INFO [root] [login_api.py login_invalid_params:37] - [无效参数的登陆数据 {'mobile': '13800000002', 'password': '123456', 'verfify': '123456'}]
2019-10-29 18:02:28,581 INFO [root] [login_parameterized.py test07_add_invalid_params:50] - [添加一个无效的参数： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': '710262d8-324a-463a-9224-0553e75105f6'}]
2019-10-29 18:02:28,581 INFO [root] [login_parameterized.py test07_add_invalid_params:50] - [添加一个无效的参数： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': '710262d8-324a-463a-9224-0553e75105f6'}]
2019-10-29 18:03:49,239 INFO [root] [utils.py read_emp_add:66] - [jsonData {'emp_add': {'username': '女娲010', 'mobile': '13700452330', 'status_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'emp_query': {'status_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'emp_update': {'username': '迪士尼乐园', 'status_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'emp_delete': {'status_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}}]
2019-10-29 18:03:49,239 INFO [root] [utils.py read_emp_add:66] - [jsonData {'emp_add': {'username': '女娲010', 'mobile': '13700452330', 'status_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'emp_query': {'status_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'emp_update': {'username': '迪士尼乐园', 'status_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'emp_delete': {'status_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}}]
2019-10-29 18:03:49,239 INFO [root] [utils.py read_emp_add:76] - [读取到的添加员工的数据为：[('女娲010', '13700452330', 200, True, 10000, '操作成功')]]
2019-10-29 18:03:49,239 INFO [root] [utils.py read_emp_add:76] - [读取到的添加员工的数据为：[('女娲010', '13700452330', 200, True, 10000, '操作成功')]]
2019-10-29 18:03:49,245 INFO [root] [utils.py query_emp:94] - [读取员工数据时，返回的数据为：[(200, True, 10000, '操作成功')]]
2019-10-29 18:03:49,245 INFO [root] [utils.py query_emp:94] - [读取员工数据时，返回的数据为：[(200, True, 10000, '操作成功')]]
2019-10-29 18:03:49,251 INFO [root] [utils.py update_emp_data:111] - [修改员工数据时，返回的数据为：[('迪士尼乐园', 200, True, 10000, '操作成功')]]
2019-10-29 18:03:49,251 INFO [root] [utils.py update_emp_data:111] - [修改员工数据时，返回的数据为：[('迪士尼乐园', 200, True, 10000, '操作成功')]]
2019-10-29 18:03:49,259 INFO [root] [utils.py delete_emp_data:127] - [删除员工用例的数据为：[(200, True, 10000, '操作成功')]]
2019-10-29 18:03:49,259 INFO [root] [utils.py delete_emp_data:127] - [删除员工用例的数据为：[(200, True, 10000, '操作成功')]]
2019-10-29 18:03:49,268 INFO [root] [utils.py read_login_data:56] - [读取后，返回的登陆数据列表为： [('登陆成功', '1380000002', '123456', 200, True, 10000, '操作成功'), ('用户名或密码错误', '1390000002', '123456', 200, False, 20001, '用户名或密码错误'), ('密码错误', '1380000002', 'error', 200, False, 20001, '用户名或密码错误'), ('手机号码为空', '', 'error', 200, False, 20001, '用户名或密码错误'), ('密码为空', '13800000002', '', 200, False, 20001, '用户名或密码错误')]]
2019-10-29 18:03:49,268 INFO [root] [utils.py read_login_data:56] - [读取后，返回的登陆数据列表为： [('登陆成功', '1380000002', '123456', 200, True, 10000, '操作成功'), ('用户名或密码错误', '1390000002', '123456', 200, False, 20001, '用户名或密码错误'), ('密码错误', '1380000002', 'error', 200, False, 20001, '用户名或密码错误'), ('手机号码为空', '', 'error', 200, False, 20001, '用户名或密码错误'), ('密码为空', '13800000002', '', 200, False, 20001, '用户名或密码错误')]]
2019-10-29 18:03:49,353 INFO [root] [login_parameterized.py test01_login:26] - [登陆成功的数据： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}]
2019-10-29 18:03:49,353 INFO [root] [login_parameterized.py test01_login:26] - [登陆成功的数据： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}]
2019-10-29 18:03:49,428 INFO [root] [login_parameterized.py test01_login:26] - [登陆成功的数据： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}]
2019-10-29 18:03:49,428 INFO [root] [login_parameterized.py test01_login:26] - [登陆成功的数据： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}]
2019-10-29 18:03:49,494 INFO [root] [login_parameterized.py test01_login:26] - [登陆成功的数据： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}]
2019-10-29 18:03:49,494 INFO [root] [login_parameterized.py test01_login:26] - [登陆成功的数据： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}]
2019-10-29 18:03:49,561 INFO [root] [login_parameterized.py test01_login:26] - [登陆成功的数据： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}]
2019-10-29 18:03:49,561 INFO [root] [login_parameterized.py test01_login:26] - [登陆成功的数据： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}]
2019-10-29 18:03:49,628 INFO [root] [login_parameterized.py test01_login:26] - [登陆成功的数据： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': '4b8ea075-d845-4db1-9ef9-783e2acced46'}]
2019-10-29 18:03:49,628 INFO [root] [login_parameterized.py test01_login:26] - [登陆成功的数据： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': '4b8ea075-d845-4db1-9ef9-783e2acced46'}]
2019-10-29 18:03:49,699 INFO [root] [login_parameterized.py test04_requests_params_is_empyt:42] - [请求参数为空： {'success': False, 'code': 99999, 'message': '抱歉，系统繁忙，请稍后重试！', 'data': None}]
2019-10-29 18:03:49,699 INFO [root] [login_parameterized.py test04_requests_params_is_empyt:42] - [请求参数为空： {'success': False, 'code': 99999, 'message': '抱歉，系统繁忙，请稍后重试！', 'data': None}]
2019-10-29 18:03:49,699 INFO [root] [login_api.py login_invalid_params:34] - [{'verfify': '123456'}]
2019-10-29 18:03:49,699 INFO [root] [login_api.py login_invalid_params:34] - [{'verfify': '123456'}]
2019-10-29 18:03:49,700 INFO [root] [login_api.py login_invalid_params:37] - [无效参数的登陆数据 {'mobile': '13800000002', 'password': '123456', 'verfify': '123456'}]
2019-10-29 18:03:49,700 INFO [root] [login_api.py login_invalid_params:37] - [无效参数的登陆数据 {'mobile': '13800000002', 'password': '123456', 'verfify': '123456'}]
2019-10-29 18:03:49,770 INFO [root] [login_parameterized.py test07_add_invalid_params:50] - [添加一个无效的参数： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': '80c02e89-cca7-485a-b288-ca22663a66a1'}]
2019-10-29 18:03:49,770 INFO [root] [login_parameterized.py test07_add_invalid_params:50] - [添加一个无效的参数： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': '80c02e89-cca7-485a-b288-ca22663a66a1'}]
2019-10-29 18:03:49,846 INFO [root] [emp_parameterized.py test01_login_success:29] - [员工管理模块登陆接口的调用结果为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': 'a8f6f3ec-6ac3-403a-b399-7f0ec30e4022'}]
2019-10-29 18:03:49,846 INFO [root] [emp_parameterized.py test01_login_success:29] - [员工管理模块登陆接口的调用结果为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': 'a8f6f3ec-6ac3-403a-b399-7f0ec30e4022'}]
2019-10-29 18:03:49,846 INFO [root] [emp_parameterized.py test01_login_success:35] - [员工管理模块登陆接口中访问app.Headers的值为： {'Content-Type': 'application/json', 'Authorization': 'Bearer a8f6f3ec-6ac3-403a-b399-7f0ec30e4022'}]
2019-10-29 18:03:49,846 INFO [root] [emp_parameterized.py test01_login_success:35] - [员工管理模块登陆接口中访问app.Headers的值为： {'Content-Type': 'application/json', 'Authorization': 'Bearer a8f6f3ec-6ac3-403a-b399-7f0ec30e4022'}]
2019-10-29 18:03:49,846 INFO [root] [emp_api.py add_emp:28] - [添加员工接口中，请求头为：self.headers = {'Content-Type': 'application/json', 'Authorization': 'Bearer a8f6f3ec-6ac3-403a-b399-7f0ec30e4022'}]
2019-10-29 18:03:49,846 INFO [root] [emp_api.py add_emp:28] - [添加员工接口中，请求头为：self.headers = {'Content-Type': 'application/json', 'Authorization': 'Bearer a8f6f3ec-6ac3-403a-b399-7f0ec30e4022'}]
2019-10-29 18:03:49,916 INFO [root] [emp_parameterized.py test02_add_emp:47] - [添加员工接口的返回值为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1189120644780216320'}}]
2019-10-29 18:03:49,916 INFO [root] [emp_parameterized.py test02_add_emp:47] - [添加员工接口的返回值为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1189120644780216320'}}]
2019-10-29 18:03:49,916 INFO [root] [emp_parameterized.py test02_add_emp:52] - [添加员工接口后，保存在app.EMP_ID的值为1189120644780216320]
2019-10-29 18:03:49,916 INFO [root] [emp_parameterized.py test02_add_emp:52] - [添加员工接口后，保存在app.EMP_ID的值为1189120644780216320]
2019-10-29 18:03:50,083 INFO [root] [emp_parameterized.py test02_add_emp:68] - [从数据库查询的到的username是('女娲010',)]
2019-10-29 18:03:50,083 INFO [root] [emp_parameterized.py test02_add_emp:68] - [从数据库查询的到的username是('女娲010',)]
2019-10-29 18:03:50,084 INFO [root] [emp_api.py query_emp:32] - [传入的查询员工API接口中的emp_id的值为:1189120644780216320]
2019-10-29 18:03:50,084 INFO [root] [emp_api.py query_emp:32] - [传入的查询员工API接口中的emp_id的值为:1189120644780216320]
2019-10-29 18:03:50,084 INFO [root] [emp_api.py query_emp:35] - [查询员工接口的URL为　http://182.92.81.159/api/sys/user/1189120644780216320]
2019-10-29 18:03:50,084 INFO [root] [emp_api.py query_emp:35] - [查询员工接口的URL为　http://182.92.81.159/api/sys/user/1189120644780216320]
2019-10-29 18:03:50,155 INFO [root] [emp_parameterized.py test03_query_emp:84] - [查询员工接口返回的数据为：{'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1189120644780216320', 'mobile': '13700452330', 'username': '女娲010', 'password': '4faf9b4fc3c15f39b6184727164dc545', 'enableState': 1, 'createTime': None, 'companyId': '1', 'companyName': '传智播客', 'departmentId': '1066238836272664576', 'timeOfEntry': '2019-10-01T00:00:00.000+0000', 'formOfEmployment': 1, 'workNumber': '9833221', 'formOfManagement': None, 'workingCity': None, 'correctionTime': '2019-12-31T16:00:00.000+0000', 'inServiceStatus': None, 'departmentName': '财务部', 'roleIds': [], 'staffPhoto': None}}]
2019-10-29 18:03:50,155 INFO [root] [emp_parameterized.py test03_query_emp:84] - [查询员工接口返回的数据为：{'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1189120644780216320', 'mobile': '13700452330', 'username': '女娲010', 'password': '4faf9b4fc3c15f39b6184727164dc545', 'enableState': 1, 'createTime': None, 'companyId': '1', 'companyName': '传智播客', 'departmentId': '1066238836272664576', 'timeOfEntry': '2019-10-01T00:00:00.000+0000', 'formOfEmployment': 1, 'workNumber': '9833221', 'formOfManagement': None, 'workingCity': None, 'correctionTime': '2019-12-31T16:00:00.000+0000', 'inServiceStatus': None, 'departmentName': '财务部', 'roleIds': [], 'staffPhoto': None}}]
2019-10-29 18:03:51,230 INFO [root] [emp_parameterized.py test04_update_emp:93] - [修改员工的结果为：{'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1189120644780216320'}}]
2019-10-29 18:03:51,230 INFO [root] [emp_parameterized.py test04_update_emp:93] - [修改员工的结果为：{'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1189120644780216320'}}]
2019-10-29 18:03:51,302 INFO [root] [emp_parameterized.py test05_delete_emp:102] - [删除员工的结果为：{'success': True, 'code': 10000, 'message': '操作成功！', 'data': None}]
2019-10-29 18:03:51,302 INFO [root] [emp_parameterized.py test05_delete_emp:102] - [删除员工的结果为：{'success': True, 'code': 10000, 'message': '操作成功！', 'data': None}]
